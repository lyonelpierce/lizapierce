generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Category {
  id            String  @id @default(uuid())
  name          String
  slug          String  @unique
  products      Product[] @relation("CategoryToProduct")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Collection {
  id            String  @id @default(uuid())
  name          String
  slug          String  @unique
  products      Product[] @relation("CollectionToProduct")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Product{
  id            String  @id @default(uuid())
  name          String
  basePrice     Int
  isFeatured    Boolean @default(false)
  slug          String  @unique
  categoryId    String
  category      Category @relation("CategoryToProduct", fields: [categoryId], references: [id])
  collectionId  String
  collection    Collection @relation("CollectionToProduct", fields: [collectionId], references: [id])
  variants      Variant[]
  oderItems     OrderItem[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Variant {
  id            String    @id @default(uuid())
  sizeId        String
  size          Size      @relation(fields: [sizeId], references: [id])
  gemId         String
  gem           Gem       @relation(fields: [gemId], references: [id])
  materialId    String
  material      Material  @relation(fields: [materialId], references: [id])
  karatId       String
  karat         Karat     @relation(fields: [karatId], references: [id])
  productId     String
  product       Product   @relation(fields: [productId], references: [id])
}

model Size {
  id            String    @id @default(uuid())
  name          String
  value         String
  variants      Variant[]
}

model Gem {
  id            String    @id @default(uuid())
  name          String
  image         String
  value         String
  price         Int
  variants      Variant[]
}

model Material {
  id            String    @id @default(uuid())
  name          String
  image         String
  value         String
  price         Int
  variants      Variant[]
}

model Karat{
  id            String  @id @default(uuid())
  name          String
  value         String
  variants      Variant[]
}

model Order {
  id            String  @id @default(uuid())
  name          String
  email         String
  phone         String
  address       String
  city          String
  state         String
  zip           String
  country       String
  orderItems    OrderItem[]
  isPaid        Boolean @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model OrderItem {
  id            String  @id @default(uuid())
  name          String
  qty           Int
  price         Int
  image         String
  productId     String
  product       Product @relation(fields: [productId], references: [id])
  orderId       String
  order         Order @relation(fields: [orderId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}